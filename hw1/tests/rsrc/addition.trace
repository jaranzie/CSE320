# [(+ x 0), x]
# [(+ x (S y)), (S (+ x y))]
# (+ (S (S 0)) (S (S (S 0))))
(+ (S (S 0)) (S (S (S 0))))
.(+ (S (S 0)))
..+
..(S (S 0))
...S
...(S 0)
....S
....0
.(S (S (S 0)))
..S
..(S (S 0))
...S
...(S 0)
....S
....0
(+ (S (S 0)) (S (S (S 0))))
==> rule: [(+ x (S y)), (S (+ x y))], subst: [y, (S (S 0))] [x, (S (S 0))] .
(S (+ (S (S 0)) (S (S 0))))
.S
.(+ (S (S 0)) (S (S 0)))
..(+ (S (S 0)))
...+
...(S (S 0))
....S
....(S 0)
.....S
.....0
..(S (S 0))
...S
...(S 0)
....S
....0
.(+ (S (S 0)) (S (S 0)))
==> rule: [(+ x (S y)), (S (+ x y))], subst: [y, (S 0)] [x, (S (S 0))] .
.(S (+ (S (S 0)) (S 0)))
..S
..(+ (S (S 0)) (S 0))
...(+ (S (S 0)))
....+
....(S (S 0))
.....S
.....(S 0)
......S
......0
...(S 0)
....S
....0
..(+ (S (S 0)) (S 0))
==> rule: [(+ x (S y)), (S (+ x y))], subst: [y, 0] [x, (S (S 0))] .
..(S (+ (S (S 0)) 0))
...S
...(+ (S (S 0)) 0)
....(+ (S (S 0)))
.....+
.....(S (S 0))
......S
......(S 0)
.......S
.......0
....0
...(+ (S (S 0)) 0)
==> rule: [(+ x 0), x], subst: [x, (S (S 0))] .
...(S (S 0))
....S
....(S 0)
.....S
.....0
(S (S (S (S (S 0)))))
